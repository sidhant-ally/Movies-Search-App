{"version":3,"sources":["components/Header/index.js","components/SearchBar/index.js","components/MovieCard/index.js","components/MoviesGrid/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","SearchBar","state","query","props","handleOnChange","event","setState","target","value","this","onChange","onClick","onSearch","Component","MovieCard","movie","Title","Poster","Year","src","alt","style","color","MoviesGrid","movies","length","map","item","index","App","loading","console","log","fetchMovies","fetch","then","res","json","Response","Search","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUASeA,EANA,WACX,OACI,oBAAIC,UAAU,QAAd,uBCYOC,G,kNAbXC,MAAQ,CAAEC,MAAO,EAAKC,MAAMD,O,EAE5BE,eAAiB,SAACC,GAAD,OAAW,EAAKC,SAAS,CAAEJ,MAAOG,EAAME,OAAOC,S,4CAEhE,WAAU,IAAD,OACL,OACI,sBAAKT,UAAU,YAAf,UACI,uBAAOS,MAAOC,KAAKR,MAAMC,MAAOQ,SAAUD,KAAKL,iBAC/C,wBAAQO,QAAS,kBAAM,EAAKR,MAAMS,SAAS,EAAKX,MAAMC,QAAtD,2B,GATQW,cCaTC,G,MAbG,SAACX,GACf,MAAgCA,EAAMY,MAA9BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,KACvB,OACI,sBAAKnB,UAAU,OAAf,UACI,8BAAK,qBAAKoB,IAAKF,EAAQG,IAAI,YAC3B,sBAAKrB,UAAU,UAAf,UACI,6BAAKiB,IACL,oBAAIK,MAAO,CAAEC,MAAO,WAApB,SAAkCJ,YCYnCK,G,MAlBI,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACI,qBAAKzB,UAAU,OAAf,SACuB,IAAlByB,EAAOC,OACJ,mDAEA,qBAAK1B,UAAU,WAAf,SACKyB,EAAOE,KAAI,SAACC,EAAMC,GAAP,OACR,cAAC,EAAD,CAAWb,MAAOY,GAAWC,YCoCtCC,E,4MAxCb5B,MAAQ,CAAEC,MAAO,MAAOsB,OAAQ,GAAIM,SAAS,G,EAE7ClB,SAAW,SAACV,GACV6B,QAAQC,IAAI,SAAU9B,GACtB,EAAKI,SAAS,CAAEJ,MAAOA,EAAOsB,OAAQ,GAAIM,SAAS,IACnD,EAAKG,YAAY/B,I,EAOnB+B,YAAc,SAAC/B,GACbgC,MAAM,8CAAD,OAA+ChC,IACjDiC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACLN,QAAQC,IAAIK,GACU,SAAlBA,EAAKC,SACP,EAAKhC,SAAS,CAAEkB,OAAQa,EAAKE,OAAQT,SAAS,IAE9C,EAAKxB,SAAS,CAAEwB,SAAS,Q,uDAZjC,WACErB,KAAKwB,YAAYxB,KAAKR,MAAMC,S,oBAe9B,WACE,OACE,sBAAKH,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWG,MAAOO,KAAKR,MAAMC,MAAOU,SAAUH,KAAKG,WAEnD,oBAAIb,UAAU,YAAd,mDACCU,KAAKR,MAAM6B,QACV,6CAEA,cAAC,EAAD,CAAYN,OAAQf,KAAKR,MAAMuB,gB,GAnCvBX,aCKH2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b101cd4b.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css'\n\nconst Header = () => {\n    return (\n        <h1 className='title'> Movies </h1>\n    );\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './index.css'\n\nclass SearchBar extends Component {\n    state = { query: this.props.query }\n\n    handleOnChange = (event) => this.setState({ query: event.target.value })\n\n    render() {\n        return (\n            <div className=\"SearchBar\">\n                <input value={this.state.query} onChange={this.handleOnChange}></input>\n                <button onClick={() => this.props.onSearch(this.state.query)}>Search</button>\n            </div>\n        );\n    }\n}\nexport default SearchBar;","import React from 'react';\nimport './index.css'\n\nconst MovieCard = (props) => {\n    const { Title, Poster, Year } = props.movie\n    return (\n        <div className=\"card\" >\n            <div><img src={Poster} alt=\"Movie\" /></div>\n            <div className=\"details\">\n                <h4>{Title}</h4>\n                <h5 style={{ color: \"#009688\" }}>{Year}</h5>\n            </div>\n        </div >\n    );\n}\n\nexport default MovieCard;\n","import React from \"react\";\nimport MovieCard from \"../MovieCard\";\nimport \"./index.css\";\n\nconst MoviesGrid = ({ movies }) => {\n    return (\n        <div className=\"grid\">\n            {movies.length === 0 ? (\n                <div> No Movies Found</div>\n            ) : (\n                <div className=\"Products\">\n                    {movies.map((item, index) => (\n                        <MovieCard movie={item} key={index} />\n                    ))}\n                </div>\n            )}\n        </div>\n\n    );\n}\n\n\nexport default MoviesGrid;\n","import React, { Component } from 'react';\nimport './App.css';\n// Components\nimport Header from './components/Header'\nimport SearchBar from './components/SearchBar'\nimport MoviesGrid from './components/MoviesGrid'\n\nclass App extends Component {\n  state = { query: \"war\", movies: [], loading: true }\n\n  onSearch = (query) => {\n    console.log('Query:', query);\n    this.setState({ query: query, movies: [], loading: true })\n    this.fetchMovies(query)\n  }\n\n  componentDidMount() {\n    this.fetchMovies(this.state.query)\n  }\n\n  fetchMovies = (query) => {\n    fetch(`https://www.omdbapi.com/?apikey=45f0782a&s=${query}`)\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json);\n        if (json.Response === 'True')\n          this.setState({ movies: json.Search, loading: false });\n        else\n          this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <SearchBar query={this.state.query} onSearch={this.onSearch} />\n\n        <h3 className=\"App-intro\">Sharing a few of our favourite movies</h3>\n        {this.state.loading ? (\n          <div>Loading...</div>\n        ) : (\n          <MoviesGrid movies={this.state.movies} />\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}